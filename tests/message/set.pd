#N canvas 301 22 946 612 10;
#X declare -path ../abstractions/ -path ../../;
#X obj 599 67 r test;
#X msg 599 107 bang;
#X obj 30 27 declare -path ../abstractions/ -path ../../;
#X obj 150 107 utils/get.time;
#X obj 30 447 utils/test.equal \$0;
#N canvas 0 22 450 300 incoming 0;
#X msg 30 137;
#X obj 30 97 f \$0;
#X obj 30 67 route bang;
#X obj 30 27 r test.message.simple;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 2 1 0 0;
#X connect 3 0 2 0;
#X restore 600 27 pd incoming;
#X msg 30 407 (processed in: \$1 ms);
#X obj 250 237 t a a;
#X obj 290 297 s \$0.log;
#X obj 290 267 list prepend prepend try:;
#X obj 300 107 utils/get.time;
#X obj 300 67 r \$0.try;
#X obj 150 67 r \$0.set;
#X obj 30 227 f;
#X obj 30 67 r \$0.test;
#X obj 30 107 t b a;
#X obj 500 267 r \$0.reset;
#X msg 500 307 reset;
#X obj 599 137 f \$0;
#X msg 599 167 \$1 0 \, \$1 1;
#X obj 370 357 pd-dom set-test;
#X obj 250 327 s set-test.to;
#X obj 250 387 r set-test.from;
#X msg 599 267 \; pd dsp \$2 \; \$1.print __ pd dsp \$2 \; \$1.reset
bang \; \$1.print __ [set 0 add1( then test -4 \; \$1.expect -3 \;
\$1.set set 0 add1 \; \$1.test -4 \; \$1.expect 0 \; \$1.try -1 \;
\$1.expect 1001 \; \$1.try 1000 \; \$1.expect -0.5 \; \$1.try -1.5
\; \$1.print __ should FAIL: \; \$1.expect 3 \; \$1.try 1 \; \$1.expect
-1.2345 \; \$1.try -2.2345 \; \$1.print __ [set 5 add1( then test 1
\; \$1.expect 3 \; \$1.set set 5 add1 \; \$1.test 1;
#X connect 0 0 1 0;
#X connect 1 0 18 0;
#X connect 3 0 13 1;
#X connect 3 1 20 1;
#X connect 6 0 4 0;
#X connect 7 0 21 0;
#X connect 7 1 9 0;
#X connect 9 0 8 0;
#X connect 10 0 6 0;
#X connect 10 1 7 0;
#X connect 11 0 10 0;
#X connect 12 0 3 0;
#X connect 13 0 6 0;
#X connect 14 0 15 0;
#X connect 15 0 13 0;
#X connect 15 1 7 0;
#X connect 16 0 17 0;
#X connect 17 0 20 1;
#X connect 18 0 19 0;
#X connect 19 0 23 0;
#X connect 22 0 4 1;
